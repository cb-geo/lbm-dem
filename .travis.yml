#########################
# project configuration #
#########################

# C++ project
language: cpp

dist: trusty

###################
# global settings #
###################

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
  - secure: "j3gxQHpmALWW1VYvX2+rv/xJ2H32W0SQXkyY83PY/PJxphuiIxWtSAM6wn0SWgBBKIi/1IAUU7xiEQewodkMXB0hjLxUDEsr7nhONPxkdFmgM4nOuqDmR2XJPACpWZV8H1aDxl37vYeWCIio0o2Q1TxtCFz4cENpVmbfuGnq3RCdDWkiwvzQqnXmk0Ac8hRS6KrWwBGOeoCFiR7+/wf0/6lYZZB+KBY7Vjuc40Zv3KZIH4tDfokrQDBmXluV4pQiPc1yz7xy180HNs2pRSTlEfknKGm/Go/wnEVu+OiEugVNt/mP1PRFV52+QuKnjqjOkrtlnEM5al/tza/PAyNdGOEoowAyjMJ8gOIw0NUWXIFZ8EQ0cvgVpLq2Azaamiq43wCVRrH7Ybg7lAVZt8+aQz7CsSbq08qS+OjxRijKxZ4pSRcYoeyXWmZ9K2rRyrJUQTE/v5i0EEgOdFwInxeOxlAgrHu1FhF9gAY+Bgb+O7XPFZTnkHkJlVghk+/mTHLVJpJ03t9gdYrqrENH7m2VfeE+q5zjxRuejLzWzrH5fSJewc3E4IUQqiJfM3NcS7Ra+p5ToRyhm/bnYJotptW6PAV2rJUK3PvLL+uLkSooHDoT/wRi9PvgKzSuXcs0pW7w0Uep0VlpJBzuMi3plI9pY/QDjnIlWwCzRCByWQ3wFsY="

################
# build matrix #
################
matrix:
  include:
    - compiler: gcc-4.9
      env: CXX_COMPILER=g++-4.9
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-4.9

    - compiler: gcc-5
      env: CXX_COMPILER=g++-5
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-5

    - compiler: gcc-6
      env: CXX_COMPILER=g++-6
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-6

  # include:
  #   # Coverity scan 
  #   - compiler: gcc
  #     env:
  #       - COMPILER=g++-5
  #       - SPECIAL=coverity
  #     before_install: echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-certificates.crt
  #     addons:
  #       apt:
  #         sources: ['ubuntu-toolchain-r-test']
  #         packages: ['g++-5', 'valgrind', 'libeigen3-dev']
  #       coverity_scan:
  #         project:
  #           name: "cb-geo/lbmdem"
  #           description: "LBM-DEM Coverity scan build submitted via Travis CI"
  #         notification_email: cued.geomechanics@gmail.com
  #         build_command_prepend: "cmake ."
  #         build_command:   "make"
  #         branch_pattern: coverity_scan
   
  #   # Codecov
  #   - compiler: gcc
  #     env:
  #       - COMPILER=g++-5
  #       - SPECIAL=codecoverage
  #     addons:
  #       apt:
  #         sources: ['ubuntu-toolchain-r-test']
  #         packages: ['g++-5', 'ruby']
  #     before_script:
  #       - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
  #       - tar xf lcov_1.11.orig.tar.gz
  #       - sudo make -C lcov-1.11/ install
  #     after_success:
  #       - rm -rf ./* && cmake .. -DENABLE_COVERAGE=On
  #       - make clean && make
  #       - ./lbmdem
  #       - ./lbmdemtest
  #       - make gcov
  #       - make lcov
  #       - bash <(curl -s https://codecov.io/bash) -X gcov


  #   # Valgrind and cppcheck
  #   - compiler: gcc
  #     env:
  #       - COMPILER=g++-5
  #       - SPECIAL=valgrind
  #     addons:
  #       apt:
  #         sources: ['ubuntu-toolchain-r-test']
  #         packages: ['g++-5', 'cppcheck', 'valgrind']
  #     after_success:
  #       - valgrind --error-exitcode=1 --leak-check=full ./lbmdem
  #       - valgrind --error-exitcode=1 --leak-check=full ./lbmdemtest
  #       - cd .. && cppcheck --enable=warning --inconclusive --force --std=c++11 src/*.cc include/*.h include/*.tcc --error-exitcode=1

  #   # Clang static analysis
  #   - os: linux
  #     compiler: clang
  #     addons:
  #       apt:
  #         sources:
  #           - ubuntu-toolchain-r-test
  #           - llvm-toolchain-trusty-3.7
  #         packages:
  #           - clang
  #           - clang-3.7
  #     env: 
  #       - COMPILER=clang++-3.7
  #       - CONFIG=scan-build
  #       - ASAN="ON"
  #       - MSAN="ON"
  #       - TSAN="ON"
  #       - UBSAN="ON"
  #       - STATIC_ANALYZER="ON"
  #       - CLANG_FORMAT="ON"
  #       - CLANG_TIDY="ON"
  #     after_success:
  #       - scan-build cmake ..
  #       - scan-build make

################
# build script #
################

script:
    - mkdir build
    - cd build
    - cmake ..
    - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then make ; fi
    - ctest -VV -S

notifications:
  slack:
    rooms:
      - cb-geo:0N3fJy823MGsJvcDB91m4p8H#lbmdem

